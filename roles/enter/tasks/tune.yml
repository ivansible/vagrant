---
- name: read settings
  ansible.builtin.set_fact:
    new_port: "{{ linen_new_port
                | d(orig_port, true)
                | d(linen_port, true)
                | d(ansible_ssh_port, true) }}"
    new_user: "{{ linen_new_user
                | d(orig_user, true)
                | d(linen_user, true)
                | d(ansible_user_id) }}"
    new_keyfile: "{{ linen_new_keyfile_
                   | d(orig_keyfile, true)
                   | d(linen_keyfile_, true)
                   | d(ansible_private_key_file, true)
                   | d('') }}"
    desired_uid: "{{ (linen_desired_uid | string in ['','0','no','false'])
                   | ternary(0, linen_desired_uid | int) }}"
    # always opt for python2 (temporary solution)
    new_python: ""
  tags: linen_settings

- name: print new settings
  ansible.builtin.debug:
    msg:
      - "******** ATTENTION! ********"
      - "New settings:"
      - "- port: {{ new_port }}"
      - "- user: {{ new_user }}"
      - "- keyfile: {{ new_keyfile or '-' }}"
      - "- python: {{ new_python or '-' }}"
      - "- uid (optional): {{ desired_uid }}"
  tags: linen_settings
- name: please see new settings...
  ansible.builtin.pause:
    seconds: "{{ linen_pause_timeout }}"
  tags: linen_settings

- name: validate new user
  ansible.builtin.assert:
    that: new_user not in ['','-','root']
    msg: "user name is invalid: {{ new_user }}"
    quiet: true


- name: remove requiretty from sudoers
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^(Defaults\s+requiretty.*)'
    state: absent
    backup: true
  tags: linen_requiretty

- name: restore pipelining once requiretty is ok
  ansible.builtin.set_fact:
    ansible_ssh_pipelining: "{{ lookup('config', 'ANSIBLE_PIPELINING') }}"
  tags: linen_requiretty


- name: setup new ssh port
  ansible.builtin.import_tasks: ssh.yml
  tags: linen_ssh_port


- name: enable password-less sudo in advance
  ansible.builtin.copy:
    content: |
      # Allow sudo group members to execute commands without password
      %sudo  ALL=(ALL) NOPASSWD:ALL
      {{ new_user }}  ALL=(ALL) NOPASSWD:ALL
    dest: /etc/sudoers.d/99-nopasswd
    owner: root
    mode: 0440
  tags: linen_nopasswd

- name: manage login user
  ansible.builtin.import_tasks: user.yml
  tags: linen_user

- name: remove old-style no-passwd file
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/sudoers.d/99_vagrant
    - /etc/sudoers.d/99_vanko
  tags: linen_nopasswd


- name: manage ssh keys
  ansible.builtin.import_tasks: keys.yml
  tags: linen_ssh_keys

- name: manage python
  ansible.builtin.import_tasks: python.yml
  tags: linen_python
...
